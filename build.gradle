plugins {
    id "eu.xenit.docker" version "5.5.1" apply false
    id "be.vbgn.ci-detect" version "0.5.0"
}

import java.util.stream.Collectors

def calcTags(version) {
    def tags = [
            "${version.major}.${version.minor}.${version.rev}".toString(),
            "${version.major}.${version.minor}".toString()
    ]

    if (version.maint) {
        tags += "${version.major}.${version.minor}.${version.rev}.${version.maint}".toString()
    }
    if (version.label) {
        tags += "${version.major}.${version.minor}.${version.rev}.${version.label}".toString()
        if (version.maint) {
            tags += "${version.major}.${version.minor}.${version.rev}.${version.maint}.${version.label}".toString()
        }
    }
    // For non-master/non-release builds, change the tags to contain branch and build number
    def isTestBuild = ci.isCi() && ci.branch != "master" && ci.branch != "release"
    if (isTestBuild) {
        tags = tags.stream().map({ it + "-build-${ci.buildNumber}" }).collect(Collectors.toList());
    }

    return tags
}

def calcRepository(flavor, enterprise, customized) {
    def repoName = (enterprise ? "docker.xenit.eu/alfresco-enterprise" : "docker.io/xenit")
    if (customized)
        return "${repoName}/alfresco-${flavor}-xenit"
    else
        return "${repoName}/alfresco-${flavor}"
}

subprojects {
    apply plugin: 'java'

    repositories {
        mavenCentral()

        maven {
            url 'https://artifacts.alfresco.com/nexus/content/repositories/public/'
            metadataSources {
                artifact()
            }
            content {
                includeModule 'org.alfresco', 'alfresco-solr'
                includeModule 'org.alfresco', 'alfresco-solr4-distribution'
                includeModule 'org.alfresco', 'alfresco-search-services'
            }
        }

        maven {
            url "https://dl.cloudsmith.io/basic/xenit/private/maven/"
            credentials {
                username property("eu.xenit.cloudsmith.username")
                password property("eu.xenit.cloudsmith.password")
            }
        }
    }

    pluginManager.withPlugin('eu.xenit.docker-config') {
        docker {
            if (System.getenv("DOCKER_USER") != null) {
                registryCredentials {
                    username = System.getenv("DOCKER_USER")
                    password = System.getenv("DOCKER_PASSWORD")
                }
            } else {
                logger.debug "using default credentials"
            }
        }
    }

    sourceSets {
        integrationTest {
            java {
                compileClasspath += main.output + test.output
                runtimeClasspath += main.output + test.output
                srcDirs = ["${rootProject.projectDir}/src/integrationTest/java"]
            }
        }
    }

    configurations {
        runtime
        integrationTestImplementation.extendsFrom testImplementation
        integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
    }

    dependencies {
        integrationTestImplementation group: 'io.rest-assured', name: 'rest-assured', version: '3.3.0'
        integrationTestImplementation group: 'io.rest-assured', name: 'json-path', version: '3.3.0'
        integrationTestImplementation group: 'io.rest-assured', name: 'rest-assured-common', version: '3.0.1'
        integrationTestImplementation group: 'junit', name: 'junit', version: '4.13.2'

        integrationTestRuntimeOnly group: 'org.glassfish.jaxb', name: 'jaxb-runtime', version: '2.3.9'
    }
}
