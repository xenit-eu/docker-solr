/*
 * This settings file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 * In a single project build this file can be empty or even removed.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user guide at https://docs.gradle.org/4.0/userguide/multi_project_builds.html
 */

rootProject.name = 'docker-solr'
// flavor is one of 'solr4','solr6'
// classification is one of 'community', 'enterprise'
def includeSubprojectPerVersion(flavor,classification) {
    new File("$rootProject.projectDir/upstream")
            .listFiles({ File f -> f.name.equals(flavor)
            } as FileFilter)

            .collectMany ({ File v -> v.listFiles({ File f -> f.name.contains(classification)
            } as FileFilter).toList()
            })

            .each { File projectFile ->
                def version = projectFile.name
                def projectName = "upstream:${flavor}-${version}"

                // exclude directories left behind when a subproject was renamed
                if (new File("$projectFile/overload.gradle").exists()) {
                    include projectName
                    project(":${projectName}").projectDir = file("upstream/${flavor}/${version}")
                    println "included $projectName"
                }
            }
    new File("$rootProject.projectDir/xenit")
            .listFiles({ File f -> f.name.equals(flavor)
            } as FileFilter)

            .collectMany ({ File v -> v.listFiles({ File f -> f.name.contains(classification)
            } as FileFilter).toList()
            })

            .each { File projectFile ->
                def version = projectFile.name
                def projectName = "xenit:${flavor}-${version}"

                if (new File("$projectFile/overload.gradle").exists()) {
                    include projectName
                    project(":${projectName}").projectDir = file("xenit/${flavor}/${version}")
                    println "included $projectName"
                }
            }
}

if(System.getenv("VERSIONS_TO_BUILD")==null || System.getenv("VERSIONS_TO_BUILD").equals("solr6")) {
    includeSubprojectPerVersion("solr6","community")
    if(hasProperty("enterprise")) {
        includeSubprojectPerVersion("solr6","enterprise")
    }
}
